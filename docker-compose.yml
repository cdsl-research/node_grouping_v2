version: '3'
services:
#  node1:
#    build: ./
#    image: python:3.8
#    container_name: node1
#    volumes:
#      - ./node_grouping/:/var/
#    tty: true
#    ports:
#      - 7000:50051
##    command: python /var/main.py node1:50051
#
#  node2:
#    build: ./
#    image: python:3.8
#    container_name: node2
#    volumes:
#      - ./node_grouping/:/var/
#    tty: true
#    ports:
#      - 8000:50051
#    depends_on:
#      - node1
##    command: python /var/main.py node1:50051
#
#  node3:
#    build: ./
#    image: python:3.8
#    container_name: node3
#    volumes:
#      - ./node_grouping/:/var/
#    tty: true
#    ports:
#      - 9000:50051
#    depends_on:
#      - node1


  demo_api_server:
    build: ./
    image: python:3.8
    container_name: demo_api_server
    volumes:
      - ./node_grouping/:/var/
    tty: true
    ports:
      - 11000:50051
      - 5000:5000
    depends_on:
      - node1
    command: bash -c "python /var/demo_api_server.py"
    networks:
      app_net:
        ipv4_address: 172.16.124.99


  node1:
    build: ./
    image: python:3.8
    container_name: node1
    volumes:
      - ./node_grouping/:/var/
    tty: true
    ports:
      - 7000:50051
    command: python /var/main.py node1:50051
    networks:
      app_net:
        ipv4_address: 172.16.124.1

  node2:
    build: ./
    image: python:3.8
    container_name: node2
    volumes:
      - ./node_grouping/:/var/
    tty: true
    ports:
      - 8000:50051
    depends_on:
      - node1
    command: bash -c "sleep 2 && python /var/main.py node1:50051"
    networks:
      app_net:
        ipv4_address: 172.16.124.2

  node3:
    build: ./
    image: python:3.8
    container_name: node3
    volumes:
      - ./node_grouping/:/var/
    tty: true
    ports:
      - 9000:50051
    depends_on:
      - node2
    command: bash -c "sleep 3 && python /var/main.py node1:50051"
    networks:
      app_net:
        ipv4_address: 172.16.124.3

  node4:
    build: ./
    image: python:3.8
    container_name: node4
    volumes:
      - ./node_grouping/:/var/
    tty: true
    ports:
      - 7100:50051
    depends_on:
      - node3
    command: bash -c "sleep 5 && python /var/main.py node1:50051"
    networks:
      app_net:
        ipv4_address: 172.16.124.4

  node5:
    build: ./
    image: python:3.8
    container_name: node5
    volumes:
      - ./node_grouping/:/var/
    tty: true
    ports:
      - 8100:50051
    depends_on:
      - node4
    command: bash -c "sleep 7 && python /var/main.py node1:50051"
    networks:
      app_net:
        ipv4_address: 172.16.124.5

  node6:
    build: ./
    image: python:3.8
    container_name: node6
    volumes:
      - ./node_grouping/:/var/
    tty: true
    ports:
      - 9100:50051
    depends_on:
      - node5
    command: bash -c "sleep 9 && python /var/main.py node1:50051"
    networks:
      app_net:
        ipv4_address: 172.16.124.6

  node7:
    build: ./
    image: python:3.8
    container_name: node7
    volumes:
      - ./node_grouping/:/var/
    tty: true
    ports:
      - 7200:50051
    depends_on:
      - node6
    command: bash -c "sleep 11 && python /var/main.py node1:50051"
    networks:
      app_net:
        ipv4_address: 172.16.124.7

  node8:
    build: ./
    image: python:3.8
    container_name: node8
    volumes:
      - ./node_grouping/:/var/
    tty: true
    ports:
      - 8200:50051
    depends_on:
      - node7
    command: bash -c "sleep 13 && python /var/main.py node1:50051"
    networks:
      app_net:
        ipv4_address: 172.16.124.8

  node9:
    build: ./
    image: python:3.8
    container_name: node9
    volumes:
      - ./node_grouping/:/var/
    tty: true
    ports:
      - 9200:50051
    depends_on:
      - node8
    command: bash -c "sleep 15 && python /var/main.py node1:50051"
    networks:
      app_net:
        ipv4_address: 172.16.124.9

  node10:
    build: ./
    image: python:3.8
    container_name: node10
    volumes:
      - ./node_grouping/:/var/
    tty: true
    ports:
      - 10000:50051
    depends_on:
      - node1
    command: bash -c "sleep 17 && python /var/main.py node1:50051"
    networks:
      app_net:
        ipv4_address: 172.16.124.10



networks:
  app_net:
    driver: bridge
    ipam:
     driver: default
     config:
       - subnet: 172.16.124.0/16
         gateway: 172.16.124.100