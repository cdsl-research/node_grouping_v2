# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import proto.node_pb2 as node__pb2


class RequestServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.add_request = channel.unary_unary(
                '/node.RequestService/add_request',
                request_serializer=node__pb2.AddRequestDef.SerializeToString,
                response_deserializer=node__pb2.AddResponseDef.FromString,
                )
        self.update_request = channel.unary_unary(
                '/node.RequestService/update_request',
                request_serializer=node__pb2.DiffNodeRequestDef.SerializeToString,
                response_deserializer=node__pb2.DiffNodeResponseDef.FromString,
                )
        self.heartbeat_request = channel.unary_unary(
                '/node.RequestService/heartbeat_request',
                request_serializer=node__pb2.HeartBeatRequestDef.SerializeToString,
                response_deserializer=node__pb2.HeartBeatResponseDef.FromString,
                )


class RequestServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def add_request(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def update_request(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def heartbeat_request(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RequestServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'add_request': grpc.unary_unary_rpc_method_handler(
                    servicer.add_request,
                    request_deserializer=node__pb2.AddRequestDef.FromString,
                    response_serializer=node__pb2.AddResponseDef.SerializeToString,
            ),
            'update_request': grpc.unary_unary_rpc_method_handler(
                    servicer.update_request,
                    request_deserializer=node__pb2.DiffNodeRequestDef.FromString,
                    response_serializer=node__pb2.DiffNodeResponseDef.SerializeToString,
            ),
            'heartbeat_request': grpc.unary_unary_rpc_method_handler(
                    servicer.heartbeat_request,
                    request_deserializer=node__pb2.HeartBeatRequestDef.FromString,
                    response_serializer=node__pb2.HeartBeatResponseDef.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'node.RequestService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RequestService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def add_request(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/node.RequestService/add_request',
            node__pb2.AddRequestDef.SerializeToString,
            node__pb2.AddResponseDef.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def update_request(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/node.RequestService/update_request',
            node__pb2.DiffNodeRequestDef.SerializeToString,
            node__pb2.DiffNodeResponseDef.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def heartbeat_request(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/node.RequestService/heartbeat_request',
            node__pb2.HeartBeatRequestDef.SerializeToString,
            node__pb2.HeartBeatResponseDef.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
